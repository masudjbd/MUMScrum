<beans:beans xmlns="http://www.springframework.org/schema/security"
             xmlns:beans="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
             xsi:schemaLocation="http://www.springframework.org/schema/beans
	http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
	http://www.springframework.org/schema/security
	http://www.springframework.org/schema/security/spring-security-3.2.xsd">
    
    <http  access-denied-page="/accessdenied" >
        
        <intercept-url pattern="/accessdenied" access="IS_AUTHENTICATED_ANONYMOUSLY" /> 

        <intercept-url pattern="/" access="ROLE_ADMIN, ROLE_PRODUCT_OWNER, ROLE_SCRUM_MASTER, ROLE_DEVELOPER, ROLE_TESTER" />
        <form-login login-page="/login" 
                    default-target-url="/" 
                    authentication-failure-url="/loginfailed"
                    username-parameter="username"
                    password-parameter="password" 
                    login-processing-url="/auth/login_check" 
        />
        
        <intercept-url pattern="/employee/*" access="ROLE_ADMIN" /> 
        <intercept-url pattern="/leave/*" access="ROLE_ADMIN" /> 
        <intercept-url pattern="/insurance/*" access="ROLE_ADMIN" /> 
        
        <intercept-url pattern="/tester/*" access="ROLE_TESTER" /> 
        <intercept-url pattern="/developer/*" access="ROLE_DEVELOPER" /> 

        <intercept-url pattern="/product-backlog/*" access="ROLE_PRODUCT_OWNER" /> 
        <intercept-url pattern="/release-backlog/*" access="ROLE_PRODUCT_OWNER, ROLE_SCRUM_MASTER" /> 
        <intercept-url pattern="/sprint/*" access="ROLE_PRODUCT_OWNER, ROLE_SCRUM_MASTER" /> 
        <intercept-url pattern="/user-story/*" access="ROLE_PRODUCT_OWNER, ROLE_SCRUM_MASTER, ROLE_DEVELOPER, ROLE_TESTER" /> 
        <intercept-url pattern="/burndown-chart" access="ROLE_ADMIN, ROLE_PRODUCT_OWNER, ROLE_SCRUM_MASTER, ROLE_DEVELOPER, ROLE_TESTER" />

        <logout logout-success-url="/logout" />
 
    </http>
    
    
    
    <beans:bean id="dataSourceSecurity" class="org.apache.commons.dbcp.BasicDataSource"
                destroy-method="close">
         <property name="driverClassName" value="org.postgresql.Driver" />
        <property name="url" value="jdbc:postgresql://ec2-107-21-125-143.compute-1.amazonaws.com:5432/d74qlnvs07gbus?zeroDateTimeBehavior=convertToNull" />
        <property name="username" value="fqcbmyftrxafsd" />
        <property name="password" value="Ov3BskYGgkRsCpDXtp5V1C3pCN" />
    </beans:bean>
    <beans:bean id="webexpressionHandler" class="org.springframework.security.web.access.expression.DefaultWebSecurityExpressionHandler" /> 

    <beans:bean id="encoder" class="org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder">
        <!--<beans:constructor-arg name="strength" value="10" />-->
    </beans:bean>
        
    <!-- 
    	<bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource"
          destroy-method="close">
        <property name="driverClassName" value="org.postgresql.Driver" />
        <property name="url" value="jdbc:postgresql://ec2-107-21-125-143.compute-1.amazonaws.com:5432/d74qlnvs07gbus?zeroDateTimeBehavior=convertToNull" />
        <property name="username" value="fqcbmyftrxafsd" />
        <property name="password" value="Ov3BskYGgkRsCpDXtp5V1C3pCN" />
    </bean>

    <!-- Hibernate 4 SessionFactory Bean definition -->
    <bean id="sessionFactory"
          class="org.springframework.orm.hibernate4.LocalSessionFactoryBean">
        <property name="dataSource" ref="dataSource" />
        <property name="packagesToScan" value="edu.mum.mscrum.domain" />
        <property name="hibernateProperties">
            <props>
                <prop key="javax.persistence.validation.factory">validator</prop>
                <prop key="hibernate.dialect">org.hibernate.dialect.PostgreSQLDialect</prop>
                <prop key="hibernate.show_sql">true</prop>
    -->
    
    <authentication-manager>
        <authentication-provider>
            <password-encoder ref="encoder" />
            <jdbc-user-service data-source-ref="dataSourceSecurity"
                               users-by-username-query="select username, password, enabled FROM employee WHERE username=?"
                               authorities-by-username-query="SELECT u.username, r.roleName FROM employee u, role r, employee_role  ur  WHERE u.id=ur.Employee_id AND r.roleId=ur.roles_roleId AND u.username =?" />
        </authentication-provider>
    </authentication-manager>

 
</beans:beans>
